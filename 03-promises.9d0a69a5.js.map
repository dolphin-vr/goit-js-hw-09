{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAa,CACjBC,QAAS,IACTC,SAAS,GAGLC,EAAOC,SAASC,cAAc,SAkBpC,SAASC,EAAcC,EAAUC,GAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OACS,IAAIC,QADTH,EACkBI,IAClBC,YAAW,KACTD,EAAQ,C,SAACN,E,MAAUC,GAAO,GACzBA,EAAM,EAGQ,CAACK,EAASE,KAC3BD,YAAW,KACTC,EAAO,C,SAACR,E,MAAUC,GAAO,GACxBA,EAAM,E,CA5BjBL,EAAKa,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAGC,iBAEH,IAAK,IAAIC,EAAI,EAAGlB,EAAUmB,OAAOjB,EAAKK,MAAMa,OAAQF,GAAKC,OAAOjB,EAAKmB,OAAOD,OAAQF,IAAKlB,GAASmB,OAAOjB,EAAKoB,KAAKF,OACjHf,EAAca,EAAGlB,GAChBuB,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBV,EAAA2B,OAAOC,QAAQ,uBAAqBnB,QAAiBC,MAAWR,EAAE,IAEnE2B,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBV,EAAA2B,OAAOG,QAAQ,sBAAoBrB,QAAeC,MAAWR,EAAE,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst optNotiflx = {\n  timeout: 3000,\n  useIcon: false,\n};\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(ev){\n  ev.preventDefault();\n\n  for (let i = 1, timeout = Number(form.delay.value); i <= Number(form.amount.value); i++, timeout+=Number(form.step.value)) {\n    createPromise(i, timeout)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, optNotiflx);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, optNotiflx);\n    });\n  }\n}\n\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          resolve({position, delay});\n        }, delay);\n      })\n    } else {\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          reject({position, delay});\n        }, delay);\n      })\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$optNotiflx","timeout","useIcon","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","setTimeout","reject","addEventListener","ev","preventDefault","i","Number","value","amount","step","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.9d0a69a5.js.map"}